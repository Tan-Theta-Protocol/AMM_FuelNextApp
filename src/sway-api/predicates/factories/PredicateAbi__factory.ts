/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.92.0
  Forc version: 0.61.2
  Fuel-Core version: 0.31.0
*/

import {
  InputValue,
  Predicate,
  Provider,
} from 'fuels';

export type PredicateAbiConfigurables = {
};

export type PredicateAbiInputs = [];

const _abi = {
  "encoding": "1",
  "types": [
    {
      "typeId": 0,
      "type": "bool",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x1af030007400000200000000000000585dffc00110ffff001aec500020f8330058fbe00250fbe004740000021a43d0002440000095000001960800001aec50001a43e0001af410001af9000098080000970000014af80000'

export const PredicateAbi__factory = {

  abi: _abi,
  bin: _bin,

  createInstance(provider: Provider, predicateData?: PredicateAbiInputs, configurables?: PredicateAbiConfigurables) {

    const predicate = new Predicate<PredicateAbiInputs>({
      bytecode: _bin,
      abi: _abi,
      provider,
      inputData: predicateData,
      configurableConstants: configurables,
    })

    return predicate;

  }

}
