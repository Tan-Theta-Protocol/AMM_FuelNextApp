/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.92.0
  Forc version: 0.61.2
  Fuel-Core version: 0.31.0
*/

import {
  InputValue,
  Predicate,
  Provider,
} from 'fuels';

export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;

export type UserPredicateAbiConfigurables = {
  TTD: AssetIdInput;
  ASSET1: AssetIdInput;
  ASSET2: AssetIdInput;
};

export type UserPredicateAbiInputs = [sub_id1: string, sub_id2: string, contract_id: ContractIdInput];

const _abi = {
  "encoding": "1",
  "types": [
    {
      "typeId": 0,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "struct AssetId",
      "components": [
        {
          "name": "bits",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "struct ContractId",
      "components": [
        {
          "name": "bits",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "sub_id1",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "sub_id2",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "contract_id",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "TTD",
      "configurableType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      },
      "offset": 4264
    },
    {
      "name": "ASSET1",
      "configurableType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      },
      "offset": 4200
    },
    {
      "name": "ASSET2",
      "configurableType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      },
      "offset": 4232
    }
  ]
}

const _bin = ''

export const UserPredicateAbi__factory = {

  abi: _abi,
  bin: _bin,

  createInstance(provider: Provider, predicateData?: UserPredicateAbiInputs, configurables?: UserPredicateAbiConfigurables) {

    const predicate = new Predicate<UserPredicateAbiInputs>({
      bytecode: _bin,
      abi: _abi,
      provider,
      inputData: predicateData,
      configurableConstants: configurables,
    })

    return predicate;

  }

}
